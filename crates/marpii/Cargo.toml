[package]
name = "marpii"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]

default = ["default_allocator", "logging", "shader_reflection", "shader_reflection_verbose", "bytemuck"]
# if enabled, includes the default allocator implementation based
# on TraverseResearche's gpu-allocator crate
default_allocator = ["gpu-allocator"]

# if enabled, marpii uses the log crate for messages.
logging = ["log"]
# if enabled, allows marpii to compile helper functions that use bytemuch to convert data to bytes
bytemuck = ["dep:bytemuck"]
# if enabled, uses puffin to create a runtime profile
profiling = ["puffin"]

#if enabled includes rspirv, which allows for runtime analysis of shaders an construction of descriptorset
#layouts for those
shader_reflection = ["rspirv-reflect"]
#if enabled, will log the exact layout of reflected shaders.
shader_reflection_verbose = ["logging"]

[dependencies]
ash = {workspace = true, features = ["loaded", "linked"]}
ash-window.workspace = true
raw-window-handle.workspace = true
thiserror.workspace = true
const-cstr = "0.3"
ahash.workspace = true
tinyvec.workspace = true

gpu-allocator = {git = "https://github.com/SiebenCorgie/gpu-allocator.git", branch = "feature-expose-memory-properties", optional = true}
log = {workspace = true, optional=true}
puffin = {version = "0.14", optional = true}
rspirv-reflect = {version = "0.7.0", optional = true}
bytemuck = {workspace = true, optional = true}

[dev-dependencies]
static_assertions = {version = "1.1.0"}
